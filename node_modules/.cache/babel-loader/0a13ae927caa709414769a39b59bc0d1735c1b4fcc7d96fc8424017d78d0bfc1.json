{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, Symbol.toStringTag, {\n  value: 'Module'\n});\nconst isArrayLike = require('../predicate/isArrayLike.js');\nfunction flatten(value, depth = 1) {\n  const result = [];\n  const flooredDepth = Math.floor(depth);\n  if (!isArrayLike.isArrayLike(value)) {\n    return result;\n  }\n  const recursive = (arr, currentDepth) => {\n    for (let i = 0; i < arr.length; i++) {\n      const item = arr[i];\n      if (currentDepth < flooredDepth && (Array.isArray(item) || Boolean(item?.[Symbol.isConcatSpreadable]) || item !== null && typeof item === 'object' && Object.prototype.toString.call(item) === '[object Arguments]')) {\n        if (Array.isArray(item)) {\n          recursive(item, currentDepth + 1);\n        } else {\n          recursive(Array.from(item), currentDepth + 1);\n        }\n      } else {\n        result.push(item);\n      }\n    }\n  };\n  recursive(Array.from(value), 0);\n  return result;\n}\nexports.flatten = flatten;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}